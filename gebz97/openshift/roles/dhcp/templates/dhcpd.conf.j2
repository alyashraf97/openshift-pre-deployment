# Global settings
#---------------------------------------------------------------------
global
    maxconn     {{ haproxy_max_conn }}
    log         /dev/log local0 info
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    log                     global
    mode                    http
    option                  httplog
    option                  dontlognull
    option http-server-close
    option redispatch
    option forwardfor       except 127.0.0.0/8
    retries                 3
    maxconn                 {{ haproxy_max_conn }}
    timeout http-request    10000ms
    timeout http-keep-alive 10000ms
    timeout check           10000ms
    timeout connect         40000ms
    timeout client          300000ms
    timeout server          300000ms
    timeout queue           50000ms

# Enable HAProxy stats
listen stats
    bind :9000
    stats uri /stats
    stats refresh 10000ms

{% for service in services %}
# {{ service.name }}
{% for frontend_port in service.frontend_ports %}
frontend {{ service.name }}_frontend_{{ frontend_port.number }}
{% if frontend_port.mode is defined %}
    mode {{ frontend_port.mode }}
{% endif %}

{% if frontend_port.number == 443 %}
    bind *:{{ frontend_port.number }}
{% else %}
    bind :{{ frontend_port.number }}
{% endif %}
    default_backend {{ service.name }}_backend
{% endfor %}

backend {{ service.name }}_backend
{% for backend_port in service.backend_ports %}
{% if backend_port.mode is defined %}
    mode {{ backend_port.mode }}
{% endif %}
    balance source
{% for node in service.nodes %}
    server      {{ node.name }} {{ node.ip }}:{{ backend_port.number }} check
{% endfor %}
{% endfor %}

{% endfor %}
